{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Intro","text":"<p>(Optional) 0 Pr\u00e4sentation der Business-Dom\u00e4ne (30 bis 60 Minuten)</p> <p>Pr\u00e4sentation der Business-Dom\u00e4ne und den gew\u00fcnschten F\u00e4higkeiten und Anwendungsf\u00e4lle anhand der Visualisierung der Domain Discovery und erg\u00e4nzenden Materialien.</p> <p>Dies ist notwendig, wenn nicht alle Spieler/innen mit den Herausforderungen, Szenarien und Anwendungsf\u00e4llen vertraut sind.</p> <p>Im besten Fall startet das Strategic Classification Game mit einer Pr\u00e4sentation der Produktvision, Gesch\u00e4ftsziele sowie Marktbeobachtungen und -erwartungen durch den Fachbereich und das Produktmanagement. Dies soll das aufgebaute Wissen durch die Domain Discovery und das Bounded Context Game aus Teil 1 abrunden und die Gruppe auf eine gemeinsame Vision einstimmen.</p>"},{"location":"mkdocs-en/","title":"Enabling Domain-Driven Design with Gamification","text":""},{"location":"mkdocs-en/#enabling-and-enabler-teams","title":"Enabling and Enabler Teams","text":"<p>Team Topologies describes Enabler Teams with the task of helping other teams effectively and efficiently shape their development process. Stream-Aligned Teams focus on continuous progress in software development (Fast Flow). Enabler Teams aim to prevent focus loss in Stream-Aligned Teams and provide support on specific topics. Possible examples include: * Application Performance Monitoring * Test-Driven Development * Continuous Delivery * Behavior-Driven Development * Application Security * Software Architecture * Domain-Driven Design * Architecture Modernization and Refactoring</p> <p>The goal of this collaboration is to enable Stream-Aligned Teams to complete their work in the desired timeframe and sustainably maintain the required quality. 85 Enabler Teams work with Stream-Aligned Teams for a temporary period, typically spanning weeks to a few months. The goal of the Enabler Team is to transfer knowledge and empower the teams so that Stream-Aligned Teams can continue the tasks independently in the future, ideally without losing focus on the continuous generation of a value stream.</p>"},{"location":"mkdocs-en/#software-architecture-enabling","title":"Software Architecture Enabling","text":"<p>@ToDo: Description of Software Architecture Enabling</p>"},{"location":"mkdocs-en/#gamification","title":"Gamification","text":"<p>The core idea of gamification is to integrate principles and elements from games into non-game contexts to increase motivation, creativity, engagement, and interaction among people. A key success factor is intrinsic motivation and the natural play instinct of people to exhibit desired behaviors, complete tasks, or achieve goals.</p> <p>With a focus on Domain-Driven Design Cards, players as a team face challenges that they must overcome together. This occurs in the form of missions that need to be completed during the course of the game.</p> <p>Another important aspect of Domain-Driven Design Cards is the goal of equally involving all group members, regardless of their level of knowledge and personality type. This also contributes to the goals of the Domain-Driven Design philosophy, which aims for a culture of broad mutual understanding and collaboration. Domain-Driven Design Cards are based on the assumption that rarely does a group consistently possess deep knowledge in the area of DDD. Therefore, the aim of Domain-Driven Design Cards is to ensure usability even without specialized expertise. Players are supported by the game cards, a DDD expert, and a moderator.</p>"},{"location":"mkdocs-en/#enabling-through-gamification","title":"Enabling through Gamification","text":"<p>The enabling process is undoubtedly multifaceted and complex. Enabling software architecture and Domain-Driven Design often involves knowledge building and high collaboration between different actors. Enabler Teams support this as method and subject matter experts. Moderation to support creative and collaborative activities as part of the enabling process is one of the main tasks of Enablers. Gamification enriches the method toolkit of an Enabler Team to support these activities in exciting, fun, and goal-oriented workshops.</p>"},{"location":"mkdocs-en/#enabling-domain-driven-design-through-domain-driven-design-cards","title":"Enabling Domain-Driven Design through Domain-Driven Design Cards","text":"<p>Domain-Driven Design Cards are a playful approach to conveying and applying the principles and concepts of Domain-Driven Design. This is done through four standalone card games that collectively support the most important core elements of Domain-Driven Design throughout the software development process.</p> <p>Bounded Context Game</p> <p>Find and define Bounded Contexts based on the results of collaborative modeling techniques.</p> <p>Strategic Classification Game</p> <p>Evaluating the strategic importance and determining an action strategy for Subdomains or Bounded Contexts.</p> <p>Context Mapping Game</p> <p>Find and define dependencies between Bounded Contexts based on the Context Mapping method.</p> <p>Tactical Architecture Game</p> <p>Find a common architecture plan for implementing Bounded Contexts at the tactical architecture level.</p> <p>All games provide space for communication, knowledge sharing, and moderated professional discussion. This promises good decisions considering all relevant perspectives and fosters a team vision and sense of togetherness.</p>"},{"location":"mkdocs-en/#domain-driven-design-cards-in-the-starter-modeling-process","title":"Domain-Driven Design Cards in the Starter Modeling Process","text":"<p>@ToDo</p>"},{"location":"mkdocs-en/#collaborative-decision-making","title":"Collaborative Decision Making","text":"<p>@ToDo: Description of Collaborative Decision Making</p>"},{"location":"mkdocs-en/#consensus-and-consent-methods","title":"Consensus and Consent Methods","text":"<p>Decision-making in the team is supported by complementary methods, such as Dot-Voting or Thumb-Voting. For Thumb-Voting, the Bounded Context Game can be supplemented with unFix Decision Patterns. Dot-Voting is easy to conduct both on-site with a pen or adhesive dots and remotely on a collaboration board.</p>"},{"location":"mkdocs/","title":"Enabling Domain-Driven Design mit Gamification","text":""},{"location":"mkdocs/#enabling-und-enabler-teams","title":"Enabling und Enabler Teams","text":"<p>Team Topologies beschreibt Enabler-Teams mit der Aufgabe andere Teams dabei zu unterst\u00fctzen, ihren Entwicklungsprozess effektiv und effizient zu gestalten. Produkt- oder Wertstrom-orientierte Teams (Stream-Aligned Teams), haben einen Fokus  auf einen stetigen Fortschritt im Ausbau der Software (Fast Flow). Enabler-Teams sollen Fokusverlust bei Stream-Aligned Teams  vermeiden, und bei speziellen Themen unterst\u00fctzen. M\u00f6gliche Beispiele hierf\u00fcr sind: * Application Performance Monitoring * Test-Driven Development * Continuous Delivery * Behavior-Driven Development * Application Security * Softwarearchitektur * Domain-Driven Design * Architekturmodernisierung und Refactoring</p> <p>Ziel dieser Zusammenarbeit ist es, die Stream-Aligned Teams zu bef\u00e4higen, ihre Arbeit in der gew\u00fcnschten Zeit  als auch nachhaltig in geforderter Qualit\u00e4t zu erledigen. </p> <p>Enabler-Teams arbeiten f\u00fcr einen tempor\u00e4ren Zeitraum mit Stream-Aligned Teams zusammen. Dieser Zeitraum erstreckt sich in der Regel \u00fcber Wochen bis zu wenigen Monate. Das Ziel von Enabler-Team ist es Wissen zu transferieren  und die Teams zu bef\u00e4higen, sodass Stream-Aligned Teams die Aufgaben in Zukunft selbstst\u00e4ndig fortf\u00fchren k\u00f6nnen, im  besten Fall ohne Fokusverlust f\u00fcr die kontinuierliche Generierung eines Wertstromes.</p>"},{"location":"mkdocs/#softwarearchitektur-enabling","title":"Softwarearchitektur Enabling","text":"<p>@ToDo: Beschreibung Softwarearchitektur Enabling</p>"},{"location":"mkdocs/#gamification","title":"Gamification","text":"<p>Die Kernidee der Gamification besteht darin, Prinzipien und Elemente aus Spielen in Nicht-Spiel-Kontexte zu integrieren,  um die Motivation, Kreativit\u00e4t, Engagement und Interaktion von Menschen zu steigern. Ein Erfolgsfaktor ist die intrinsische  Motivation sowie der nat\u00fcrliche Spieltrieb von Menschen, gew\u00fcnschte Verhaltensweisen auszuf\u00fchren, Aufgaben zu erledigen  oder Ziele zu erreichen. </p> <p>Mit Fokus auf Domain-Driven Design Cards werden Spieler/innen als Team mit Herausforderungen  konfrontiert, die sie gemeinsam meistern m\u00fcssen. Dies geschieht in Form von Missionen, die im Spielverlauf abgeschlossen  werden m\u00fcssen.</p> <p>Ein weiterer wichtiger Aspekt von Domain-Driven Design Cards ist das Ziel, alle Mitglieder der Gruppe gleichwertig zu  involvieren, unabh\u00e4ngig von ihrem Wissensstand und Charaktertyp. Dies tr\u00e4gt dar\u00fcber hinaus zu den Zielen der  Domain-Driven Design Philosophie bei, die eine Kultur des breiten gemeinsamen Verst\u00e4ndnisses und der Zusammenarbeit  anstrebt. Domain-Driven Design Cards basieren auf der Annahme, dass in der Realit\u00e4t selten eine Gruppe existiert,  die durchgehend \u00fcber tiefes Wissen im Bereich DDD verf\u00fcgt. Daher ist die Zielsetzung von Domain-Driven Design Cards,  dass die Nutzung auch ohne spezielle Expertise m\u00f6glich ist. Die Spieler/innen werden durch die Spielkarten,  durch eine Expert/in in DDD sowie eine Moderator/in unterst\u00fctzt.</p>"},{"location":"mkdocs/#enabling-mittels-gamification","title":"Enabling mittels Gamification","text":"<p>Der Prozess des Enabling ist mit sicherlich vielschichtig und komplex. Das Enabling von Softwarearchitektur und Domain-Driven Design ist meist verbunden mit Wissensaufbau und hoher Kollaboration zwischen unterschiedlichen Akteuren. Enabler-Teams unterst\u00fctzen an dieser Stelle als Methoden- und Themenexperten. Moderationsleistung zur Unterst\u00fctzung kreativer und kollaborativer Aktivit\u00e4ten im Rahmen des Enabling geh\u00f6rt zu den Hauptaufgaben von Enablern.  Gamification bereichert den Methodik-Baukasten eines Enabler-Team zur Unterst\u00fctzung dieser Aktivit\u00e4ten in spannenden, spa\u00dfigen und auch zielf\u00fchrenden Workshops.</p>"},{"location":"mkdocs/#enabling-von-domain-driven-design-mittels-domain-driven-design-cards","title":"Enabling von Domain-Driven Design mittels Domain-Driven Design Cards","text":"<p>Domain-Driven Design Cards sind ein spielerischer Ansatz, um die Prinzipien und Konzepte von Domain-Driven Design  zu vermitteln und anzuwenden. Dies erfolgt \u00fcber vier f\u00fcr sich stehende Kartenspiele, die in Summe die wichtigsten Kernelemente  von Domain-Driven Design \u00fcber den gesamten Softwareentwicklungsprozess unterst\u00fctzen.</p> <p>Bounded Context Game</p> <p>Finden und Definieren von Bounded Contexts auf Basis der Resultate kollaborativer Modellierungstechniken.</p> <p>Strategic Classification Game</p> <p>Bewertung der strategischen Bedeutung und Ermittlung einer Handlungsstrategie f\u00fcr Subdom\u00e4nen bzw. Bounded Contexts.</p> <p>Context Mapping Game</p> <p>Finden und Definieren von Abh\u00e4ngigkeiten zwischen Bounded Context auf Basis der Methode Context Mapping. </p> <p>Tactical Architecture Game</p> <p>Finden eines gemeinsamen Architekturplans f\u00fcr die Umsetzung von Bounded Contexts auf taktischer Architekturebene.</p> <p>Alle Spiele bieten Raum f\u00fcr Kommunikation, Wissensaustausch und -aufbau sowie f\u00fcr die moderierte fachliche Diskussion. Dies verspricht gute Entscheidungen unter Ber\u00fccksichtigung aller relevanter Perspektiven und  f\u00f6rdert eine Team-Vision und ein Wir-Gef\u00fchl.</p>"},{"location":"mkdocs/#domain-driven-design-cards-im-starter-modeling-process","title":"Domain-Driven Design Cards im Starter Modeling Process","text":"<p>@ToDo</p>"},{"location":"mkdocs/#kollaborative-entscheidungsfindung","title":"Kollaborative Entscheidungsfindung","text":"<p>@ToDo: Beschreibung kollaborative Entscheidungsfindung</p>"},{"location":"mkdocs/#konzens-und-konsent-methoden","title":"Konzens- und Konsent-Methoden","text":"<p>Entscheidungsfindung im Team unterst\u00fctzen erg\u00e4nzend Methoden, wie z.B. Dot-Voting oder Thumb-Voting. F\u00fcr Thumb-Voting kann das Bounded Context Game mit unFix Decision Patterns erg\u00e4nzt werden. Dot-Voting ist sowohl vor Ort mit Stift oder Klebepunkten als auch remote auf einem Collaboration Board einfach durchf\u00fchrbar.</p>"},{"location":"docs/ddd-starter-process-with-gamifaction-de/","title":"Domain-Driven Design erfolgreich anwenden","text":""},{"location":"docs/ddd-starter-process-with-gamifaction-de/#domain-driven-design-starter-modeling-process-der-ddd-crew","title":"Domain-Driven Design Starter Modeling Process der DDD-Crew","text":"<p>Die DDD-Crew beschreibt ihren Domain-Driven Design Starter Modeling Process als einen</p> <p>Schritt-f\u00fcr-Schritt-Leitfaden zum Lernen und praktischen Anwenden jedes Aspekts von Domain-Driven Design (DDD) \u2013 von der Orientierung am Gesch\u00e4ftsmodell einer Organisation bis hin zur Codierung eines Domain-Modells.</p> <p>Der Prozess umfasst alle Aspekte zur Gestaltung der Softwarearchitektur einer komplexen Gesch\u00e4ftsdomain mit der DDD-Denkweise!</p> <p>Der Prozess ist keine lineare Abfolge von Schritten, die befolgt werden sollten. Domain-Driven Design ist ein evolution\u00e4rer Designprozess, der kontinuierliche Iterationen auf allen Wissens- und Designaspekten erfordert.</p> <p></p> <p>Der Prozess unterst\u00fctzt mit wertvollem Wissen und Methoden zur Durchf\u00fchrung der einzelnen Prozessschritte. F\u00fcr jeden Schritt beschreibt der Prozess, wer einbezogen werden soll und welche (kollaborativen) Methoden und Werkzeuge n\u00fctzlich sind.</p> <p>Insbesondere wenn Domain-Driven Design eingef\u00fchrt wird, ist es notwendig, Wissen zu lernen und aufzubauen. Die Gesch\u00e4ftsdomain ben\u00f6tigt ein Architektur-(Modernisierungs-)Enabling, um Domain-Driven Design erfolgreich zu etablieren. Es spielt keine Rolle, ob es sich um ein Greenfield- oder ein Brownfield-Projekt handelt. Nur dass das Brownfield schwieriger ist und zus\u00e4tzliche Aspekte ber\u00fccksichtigt werden m\u00fcssen.</p> <p>Domain-Driven Design Cards ist ein Gamification-Ansatz, der in verschiedenen Schritten des Domain-Driven Design Starter Modeling Process angewendet werden kann, um Zusammenarbeit zu unterst\u00fctzen, die Schritte durchzuf\u00fchren und on-the-job zu lernen.</p> <p>Lesen Sie hier mehr \u00fcber die Idee des Enablings durch Gamification.</p>"},{"location":"docs/ddd-starter-process-with-gamifaction-de/#domain-driven-design-cards-im-starter-modeling-process","title":"Domain-Driven Design Cards im Starter Modeling Process","text":"<p>Die folgende Visualisierung zeigt den Starterprozess und die Schritte, die mit dem Spiel der Domain-Driven Design Cards unterst\u00fctzt werden.</p> <p></p>"},{"location":"docs/ddd-starter-process-with-gamifaction-de/#zerlegen-und-definieren","title":"Zerlegen und Definieren","text":""},{"location":"docs/ddd-starter-process-with-gamifaction-de/#verbinden","title":"Verbinden","text":""},{"location":"docs/ddd-starter-process-with-gamifaction-de/#code","title":"Code","text":""},{"location":"docs/ddd-starter-process-with-gamifaction-de/#ganzheitliche-anwendung-der-domain-driven-design-cards","title":"Ganzheitliche Anwendung der Domain-Driven Design Cards","text":""},{"location":"docs/ddd-starter-process-with-gamifaction-en/","title":"Starting with Domain-Driven Design","text":""},{"location":"docs/ddd-starter-process-with-gamifaction-en/#domain-driven-design-starter-modeling-process-of-the-ddd-crew","title":"Domain-Driven Design Starter Modeling Process of the DDD-Crew","text":"<p>The DDD-Crew describes their Domain-Driven Design Starter Modeling Process as a </p> <p>step-by-step guide for learning and practically applying each aspect of Domain-Driven Design  (DDD) - from orienting around an organisation's business model to coding a domain model.</p> <p>The process includes all aspects for designing the software architecture of a complex business domain  with the DDD mindset!</p> <p>The process is not a linear sequence of steps that should be followed.  Domain-Driven Design is an evolutionary design process which necessitates continuous iteration  on all aspects of knowledge and design.</p> <p></p> <p>The process supports with valuable knowledge and methods for performing the steps of the process. For each step the process describes who is to envolve and which (collaborative) methods and tools are beneficial to use.</p> <p>Especially when domain-driven design will be introduced, it is necessary  to learn and build up knowledge. The business domain needs an Architecture (Modernization) Enabling to establish domain-driven design successfully. It does not matter if you have a greenfield project or a brownfield project. Only that the brownfield is harder and additional aspects must be considered.</p> <p>Domain-Driven Design Cards is a gamification approach, applicable in different steps  of the domain-driven design starter modeling process to support collaboration, performing the steps  and learning on the job.</p> <p>Read here more about the idea of enabling by gamification.</p>"},{"location":"docs/ddd-starter-process-with-gamifaction-en/#domain-driven-design-cards-in-the-starter-modeling-process","title":"Domain-Driven Design Cards in the Starter Modeling Process","text":"<p>The following visualization show the starter process and the steps, supported with the game of Domain-Driven Design Cards.</p> <p></p>"},{"location":"docs/ddd-starter-process-with-gamifaction-en/#decompose-and-define","title":"Decompose and Define","text":""},{"location":"docs/ddd-starter-process-with-gamifaction-en/#connect","title":"Connect","text":""},{"location":"docs/ddd-starter-process-with-gamifaction-en/#code","title":"Code","text":""},{"location":"docs/bcg/bcg-gameplay-de/","title":"Das Bounded Context Game","text":""},{"location":"docs/bcg/bcg-gameplay-de/#ziel-des-spiels","title":"Ziel des Spiels","text":"<p>Das Ziel des Bounded Context Game ist es, Bounded Context-Kandidaten anhand bekannter Heuristiken  zu identifizieren und zu beschreiben.</p> <p>Heuristiken f\u00fcr den Bounded Context Schnitte sind:</p> <ul> <li>Business Capabilities</li> <li>Sprach- und Modellunterschiede, </li> <li>Einseitiger Informationsfluss,</li> <li>Koh\u00e4sive Gruppierung von Aktivit\u00e4ten (Prozesse, Workflows und Use Cases), </li> <li>Unterschiedliche Ausl\u00f6ser,</li> <li>Teams und Lokation</li> </ul>"},{"location":"docs/bcg/bcg-gameplay-de/#die-mission","title":"Die Mission","text":"<p>Einen Bounded Context zu identifizieren und in einem Mindestumfang zu beschreiben,  stellt eine Mission f\u00fcr das Team dar. Die Mission ist erf\u00fcllt, wenn der Bounded Context  im Mindestumfang anhand des Bounded Context Canvas  der DDD-Crew beschrieben ist. </p> <p>Zum Mindestumfang geh\u00f6rt: * Zweck, Verantwortlichkeiten, Existenzbegr\u00fcndung * Angewendete Heuristiken f\u00fcr den Schnitt  * Wichtigste Gesch\u00e4ftsereignisse und Dom\u00e4nenobjekte</p> <p>Das Spiel besteht aus mehreren Missionen und ist zu Ende,  wenn alle Gesch\u00e4ftsf\u00e4higkeiten und -anforderungen der Spielgrundlage in Bounded Contexts  verortet sind.</p>"},{"location":"docs/bcg/bcg-gameplay-de/#spielvorbereitung","title":"Spielvorbereitung","text":"<p>Um das Bounded Context Game zu spielen, wird visualisiertes Wissen \u00fcber die Business-Dom\u00e4ne ben\u00f6tigt.</p> <p>Diese Spielgrundlage entsteht als Ergebnisse der Domain Discovery mittels Collaborative Modeling.  Aus unserer Erfahrung passende Visualisierung von Dom\u00e4nenwissen finden sich in  * einer Business Capability Map,  * in einem Event Storm, * in Domain Stories, * Examples und Rules auf Basis von Example Mapping. * Customer Journey's, * fachlichen Prozessmodellen sowie * einer Kombination aus den genannten Artefakten.</p> <p>Metaphorisch oder auch physisch stellen diese Modelle das Spielfeld des Bounded Context Game dar.</p>"},{"location":"docs/bcg/bcg-gameplay-de/#spielverlauf","title":"Spielverlauf","text":"<p>1 Wissen teilen (30 bis 90 Minuten)</p> <p>Die Moderator/in stellt die Artefakte der Domain Discovery vor und erl\u00e4utert die Zusammenh\u00e4nge und  Herausforderungen der Business-Dom\u00e4ne. Die Spieler/innen haben die M\u00f6glichkeit, Fragen zu stellen und  sich mit den Artefakten auseinanderzusetzen.</p> <p>2 Austausch und Analyse (30 bis 60 Minuten)</p> <p>In der n\u00e4chsten Spielphase setzt sich jede Spieler/in f\u00fcr sich oder im Austausch  mit anderen Spieler/innen mit den fachlichen Artefakten auseinander und analysiert  den Sachverhalt hinsichtlich der anzuwendenden Heuristiken. </p> <p>3 Karten legen und Bounded Context definieren (30 bis 60 Minuten)</p> <p>Mindestens eine Spieler/in beginnt nun ihren ersten Bounded Context Schnitt auf dem Spielfeld  zu visualisieren (z.B. durch Einkreisung) und die Karten, die als Heuristik f\u00fcr den Schnitt  angewendet werden, zu legen.</p> <p>Dadurch erh\u00e4lt die Diskussion einen Scope, und andere Spieler/innen werden eingeladen,  ihre Karten ebenfalls zu legen und ihre Perspektive zu erl\u00e4utern.  An dieser Stelle ist die Moderator/in gefordert, die Gruppendiskussion zu lenken,  sodass nach 30 bis 60 Minuten eine erste Beschreibung f\u00fcr einen Bounded Context entsteht.</p> <p>In der Regel bringt diese Diskussion bereits Anhaltspunkte f\u00fcr weitere Bounded Context Kandidaten  zum Vorschein, und der n\u00e4chste Schritt kristallisiert sich durch diese Spieldynamik heraus.  Ist dies nicht der Fall, beginnt wieder eine Spieler/in mit der visualisierung eines Schnitts und  legen der Karten.</p> <p>Das Spiel ist beendet, wenn alle auf dem Spielfeld dargestellten F\u00e4higkeiten und Funktionen  in einem Bounded Context verortet sind und jeder Bounded Context beschrieben ist.</p> <p>Visueller Spielablauf</p> <p></p>"},{"location":"docs/bcg/bcg-gameplay-en/","title":"The Bounded Context Game","text":""},{"location":"docs/bcg/bcg-gameplay-en/#objective-of-the-game","title":"Objective of the Game","text":"<p>The objective of the Bounded Context Game is to identify and describe Bounded Context candidates based on known heuristics.</p> <p>Heuristics for Bounded Context boundaries are:</p> <ul> <li>Business Capabilities</li> <li>Language and model differences</li> <li>Unidirectional information flow</li> <li>Cohesive grouping of activities (processes, workflows, and use cases)</li> <li>Different triggers</li> <li>Teams and locations</li> </ul>"},{"location":"docs/bcg/bcg-gameplay-en/#the-mission","title":"The Mission","text":"<p>Identifying and describing a Bounded Context to a minimum extent constitutes a mission for the team. The mission is accomplished when the Bounded Context is described to the minimum extent using the Bounded Context Canvas by the DDD-Crew.</p> <p>The minimum extent includes: * Purpose, responsibilities, reason for existence * Applied heuristics for the boundary * Key business events and domain objects</p> <p>The game consists of multiple missions and ends when all business capabilities and requirements of the game basis are allocated to Bounded Contexts.</p>"},{"location":"docs/bcg/bcg-gameplay-en/#game-preparation","title":"Game Preparation","text":"<p>To play the Bounded Context Game, visualized knowledge about the business domain is needed.</p> <p>This game basis is created as the result of domain discovery through collaborative modeling. Based on our experience, suitable visualizations of domain knowledge include: * A Business Capability Map * Event Storming * Domain Stories * Examples and rules based on Example Mapping * Customer Journeys * Business process models * A combination of the aforementioned artifacts</p> <p>Metaphorically or physically, these models represent the playing field of the Bounded Context Game.</p>"},{"location":"docs/bcg/bcg-gameplay-en/#game-progress","title":"Game Progress","text":"<ol> <li>Sharing Knowledge (30 to 90 minutes)</li> </ol> <p>The moderator presents the artifacts from domain discovery and explains the connections and challenges of the business domain. The players have the opportunity to ask questions and engage with the artifacts.</p> <ol> <li>Discussion and Analysis (30 to 60 minutes)</li> </ol> <p>In the next phase of the game, each player individually or in discussion with other players engages with the business artifacts and analyzes the situation concerning the applicable heuristics.</p> <ol> <li>Placing Cards and Defining Bounded Context (30 to 60 minutes)</li> </ol> <p>At least one player now begins to visualize their first Bounded Context boundary on the playing field (e.g., by circling) and place the cards that apply as heuristics for the boundary.</p> <p>This provides scope for discussion, and other players are invited to place their cards and explain their perspectives. The moderator is responsible for guiding the group discussion so that within 30 to 60 minutes, an initial description for a Bounded Context is created.</p> <p>Usually, this discussion already reveals indications for further Bounded Context candidates, and the next step crystallizes through this game dynamic. If not, a player starts again with the visualization of a boundary and placing the cards.</p> <p>The game ends when all capabilities and functions depicted on the playing field are allocated to a Bounded Context and each Bounded Context is described.</p> <p>Visual Game Progress</p> <p></p>"},{"location":"docs/cmg/cmg-gameplay-de/","title":"Das Context Mapping Game","text":""},{"location":"docs/cmg/cmg-gameplay-de/#ziel-des-spiels","title":"Ziel des Spiels","text":"<p>Das Context Mapping Game hat das Ziel, Abh\u00e4ngigkeiten zwischen Bounded Contexts unter Ber\u00fccksichtigung des * Call Flow, * Model Flow sowie * Influence Flow</p> <p>zu gestalten.</p>"},{"location":"docs/cmg/cmg-gameplay-de/#die-mission","title":"Die Mission","text":"<p>Die Definition der Abh\u00e4ngigkeiten zwischen zwei Bounded Contexts anhand der Context Mapping Patterns  von Domain-Driven Design stellt eine Mission des Teams dar. Das Spiel endet, sobald alle Missionen  abgeschlossen sind. Dies bedeutet, dass alle Abh\u00e4ngigkeiten zwischen Bounded Contexts definiert wurden.</p>"},{"location":"docs/cmg/cmg-gameplay-de/#spielvorbereitung","title":"Spielvorbereitung","text":"<p>Die Vorbedingung f\u00fcr das Spielen des Context Mapping Game ist die Bekanntheit der Bounded Contexts.  Jeder Bounded Context ist mittels Bounded Context Canvas beschrieben.  Die bef\u00fcllten Bounded Context Canvases werden physisch oder digital als Spielfeld verwendet.  Sind Subdom\u00e4nen bekannt, empfiehlt es sich, Bounded Contexts der gleichen Subdom\u00e4ne gruppiert  auf dem Spielfeld darzustellen.</p>"},{"location":"docs/cmg/cmg-gameplay-de/#spielverlauf","title":"Spielverlauf","text":"<ol> <li>Dependency Storming (10 bis 20 Minuten)</li> </ol> <p>Im ersten Schritt des Context Mapping Game entscheidet sich das Team f\u00fcr die erste Mission,  d.h. f\u00fcr einen zu betrachtenden Bounded Context. Die Mission beginnt mit 10 Minuten Brainstorming  von Abh\u00e4ngigkeiten f\u00fcr den Bounded Context (Dependency Storming). Eine Abh\u00e4ngigkeit wird als * Command, * Query, * Event, * (Sub-)System oder * Actor</p> <p>zum Ausdruck gebracht.</p> <p>Die Abh\u00e4ngigkeiten nach ein- und ausgehenden Abh\u00e4ngigkeiten unterteilt  und als Sticky Notes auf dem Spielfeld platziert.</p> <ol> <li>Gruppierung der Abh\u00e4ngigkeiten (10 Minuten)</li> </ol> <p>Die Gruppe steigt nun in eine erste Diskussion \u00fcber die identifizierten Abh\u00e4ngigkeiten und gruppiert gleiche Nennungen sowie inhaltliche zusammengeh\u00f6rige Elemente  (z.B. passendens Command zu einem System oder die Query eines Actors).</p> <p>Identifizierte Abh\u00e4ngigkeiten zwischen Bounded Contexts k\u00f6nnen optional durch eine  Verbindungslinie auf dem Spielfeld visualisiert werden.</p> <ol> <li>Diskussion und Karten legen (15 Minuten)</li> </ol> <p>Im n\u00e4chsten Schritt wird jede Abh\u00e4ngigkeit im Team mit einer Timebox von 15 Minuten diskutiert.  Hierbei hat jede Spieler/in die M\u00f6glichkeit, ihre Ansicht zu teilen, andere Ansichten aufzunehmen  und in den Austausch \u00fcber die dargestellten Sachverhalte zu gehen.</p> <p>Anschlie\u00dfend legt jede Spieler/in seine Karte und teil somit seine Ansicht \u00fcber die Beziehungsdefinition zwischen zwei Bounded Contexts. Eine Abh\u00e4ngigkeit definiert zu durch das Legen der  Rollenkarte (Up- und Downstream) und Musterkarte (Context Mapping Pattern je Rolle).</p> <ol> <li>Entscheidungsfindung (15 Minuten)</li> </ol> <p>Wenn sich eine gemeinsame Basis mit Ausrei\u00dfern aufzeigt, kann die Entscheidungsfindung durch die Erkl\u00e4rung der Ausrei\u00dfer gestartet werden.  Wenn das Ergebnis sehr unterschiedlich oder einheitlich ist, beginnt eine Spieler/in mit der Schilderung ihrer Sicht.</p> <p>Durch den Austausch im Team eliminieren sich nicht mehr passende Muster und Rollen und die Spielkarten werden vom Spielfeld entfernt.  Die Abh\u00e4ngigkeit gilt als definiert, wenn die gelegten Karten eine valide und widerspruchsfreie Abbildung  * der Context Mapping Patterns mittels Musterkarten und * Rollendefinition mittels Rollenkarten abbilden und * alle Spieler/innen \u00fcber diese Definition der Beziehungsdefinition \u00fcbereinstimmen.</p> <p>Visueller Spielablauf</p> <p></p>"},{"location":"docs/cmg/cmg-gameplay-en/","title":"The Context Mapping Game","text":""},{"location":"docs/cmg/cmg-gameplay-en/#objective-of-the-game","title":"Objective of the Game","text":"<p>The objective of the Context Mapping Game is to design dependencies between Bounded Contexts considering * Call Flow, * Model Flow, and * Influence Flow.</p>"},{"location":"docs/cmg/cmg-gameplay-en/#the-mission","title":"The Mission","text":"<p>Defining dependencies between two Bounded Contexts based on the Context Mapping Patterns of Domain-Driven Design constitutes a mission for the team. The game ends when all missions are completed. This means that all dependencies between Bounded Contexts have been defined.</p>"},{"location":"docs/cmg/cmg-gameplay-en/#game-preparation","title":"Game Preparation","text":"<p>The prerequisite for playing the Context Mapping Game is the familiarity with the Bounded Contexts. Each Bounded Context is described using the Bounded Context Canvas. The filled-in Bounded Context Canvases are used as the playing field, either physically or digitally. If subdomains are known, it is recommended to group Bounded Contexts of the same subdomain on the playing field.</p>"},{"location":"docs/cmg/cmg-gameplay-en/#game-progress","title":"Game Progress","text":"<ol> <li>Dependency Storming (10 to 20 minutes)</li> </ol> <p>In the first step of the Context Mapping Game, the team chooses the first mission, i.e., a Bounded Context to be considered. The mission begins with 10 minutes of brainstorming dependencies for the Bounded Context (Dependency Storming). A dependency is expressed as a * Command, * Query, * Event, * (Sub-)System, or * Actor.</p> <p>The dependencies are divided into incoming and outgoing dependencies and placed as sticky notes on the playing field.</p> <ol> <li>Grouping Dependencies (10 minutes)</li> </ol> <p>The group now engages in an initial discussion about the identified dependencies and groups similar mentions as well as related elements (e.g., matching Command to a System or the Query of an Actor).</p> <p>Identified dependencies between Bounded Contexts can optionally be visualized with a connecting line on the playing field.</p> <ol> <li>Discussion and Placing Cards (15 minutes)</li> </ol> <p>In the next step, each dependency is discussed within the team with a timebox of 15 minutes. Each player has the opportunity to share their view, consider other views, and engage in discussions about the presented matters.</p> <p>Then, each player places their card, thus sharing their view on the relationship definition between two Bounded Contexts. A dependency is defined by placing the Role Card (Upstream and Downstream) and Pattern Card (Context Mapping Pattern for each role).</p> <ol> <li>Decision Making (15 minutes)</li> </ol> <p>If a common basis with outliers is revealed, the decision-making process can start by explaining the outliers. If the result is very different or uniform, a player begins by describing their perspective.</p> <p>Through the exchange within the team, non-fitting patterns and roles are eliminated, and the playing cards are removed from the field. The dependency is considered defined when the placed cards provide a valid and consistent depiction of * the Context Mapping Patterns using Pattern Cards and * role definition using Role Cards and * all players agree on this definition of the relationship.</p> <p>Visual Game Progress</p> <p></p>"},{"location":"docs/scg/scg-gameplay-de/","title":"Das Strategic Classification Game","text":""},{"location":"docs/scg/scg-gameplay-de/#ziel-des-spiels","title":"Ziel des Spiels","text":"<p>Das Strategic Classification Game zielt darauf ab, die strategische Klassifikation  einer Subdom\u00e4ne oder Bounded Context zu ermitteln und die zur Klassifikation passende  Handlungsstrategie abzuleiten.</p>"},{"location":"docs/scg/scg-gameplay-de/#die-mission","title":"Die Mission","text":"<p>Ermittlung der strategischen Klassifikation und Handlungsstrategie anhand  des Bewertungs- und des Handlungsstrategieschema. Das Spiel endet, sobald dies f\u00fcr alle  Subdom\u00e4nen bzw. Bounded Contexts einer Business-Dom\u00e4ne erfolgt ist.</p>"},{"location":"docs/scg/scg-gameplay-de/#spielvorbereitung","title":"Spielvorbereitung","text":"<p>Die Vorbedingung f\u00fcr das Spielen des Strategic Classification Game ist die Bekanntheit  der Bounded Contexts. Jeder Bounded Context ist mittels Bounded Context Canvas beschrieben.  Die bef\u00fcllten Bounded Context Canvases werden physisch oder digital als Spielfeld verwendet.  Sind Subdom\u00e4nen bekannt, empfiehlt es sich, Bounded Contexts der gleichen Subdom\u00e4ne gruppiert  auf dem Spielfeld darzustellen.</p>"},{"location":"docs/scg/scg-gameplay-de/#spielverlauf","title":"Spielverlauf","text":"<ol> <li>Subdom\u00e4ne (Bounded Contexts) bewerten (60 Minuten)</li> </ol> <p>Das Spiel beginnt mit der Auswahl dem ersten Bewertungsobjekt (Subdom\u00e4ne oder Bounded Context).  Dies entspricht der Auswahl der ersten Mission. F\u00fcr dieses Bewertungsobjekt wird das dargestellte  Bewertungsschema ausgef\u00fcllt.</p> <p></p> <p>In den ersten 15 Minuten erhalten die Spieler/innen die M\u00f6glichkeit sich Gedanken zu machen oder auch  bilateral sich mit anderen Spieler/innen auszutauschen. Die Karten des Strategic Classification Game  geben Hilfestellung und erkl\u00e4ren die Bewertungskriterien und ihre Einstufung.</p> <p>Nach dieser Einf\u00fchrungsphase startet die Gruppendiskussion, in der eine beliebige Spieler/in ihre  Bewertung f\u00fcr das erste Bewertungskriterium mitteilt. Dabei wird die zur Erl\u00e4uterung passende  Spielkarte auf das Spielfeld gelegt. Die Mitspieler/innen steigen in die Diskussion ein und legen  ebenfalls ihre Karten auf das Spielfeld. Die Diskussion im Team f\u00fchrt zu einer Entscheidung hinsichtlich der Einstufung in gering, mittel oder hoch.</p> <p>Der Vorgang wird f\u00fcr jedes Bewertungskriterium wiederholt.</p> <ol> <li>Strategische Klassifizierung entscheiden (15 bis 30 Minuten)</li> </ol> <p>Aufbauend auf der Bewertung der einzelnen Kriterien wird im n\u00e4chsten Schritt die strategische  Klassifikation anhand des Bewertungsschemas abgeleitet und im Core Domain Chart festgehalten.</p> <p></p> <ol> <li>Handlungsstrategie festlegen (15 bis 30 Minuten)</li> </ol> <p>Im n\u00e4chsten Schritt analysieren die Spieler/innen die zur strategischen Klassifizierung  passende Handlungsstrategie. Diese besteht aus Realisierungsoptionen und Verantwortungsmuster.  Auch hier sollen die Spieler/innen die M\u00f6glichkeit erhalten, dies eigenst\u00e4ndig zu analysieren oder  eigenst\u00e4ndig den Austausch mit anderen Spieler/innen zu suchen.</p> <p>Nach dieser Einf\u00fchrungsphase von 10 bis 15 Minuten legt erneut eine beliebige Spieler/in ihre Karte  f\u00fcr die Realisierungsoption und f\u00fcr das Verantwortungsmuster auf das Spielfeld und begr\u00fcndet ihre  Perspektive. Die anderen Spieler/innen folgen, und der Austausch in der Gruppe entsteht erneut. Abschlie\u00dfend muss in der Gruppe eine klare Entscheidung herbeigef\u00fchrt werden.  Diese wird festgehalten, durch Markierung im Handlungsstrategieschema.</p> <p></p> <p>Visueller Spielablauf</p> <p></p>"},{"location":"docs/scg/scg-gameplay-en/","title":"The Strategic Classification Game","text":""},{"location":"docs/scg/scg-gameplay-en/#objective-of-the-game","title":"Objective of the Game","text":"<p>The Strategic Classification Game aims to determine the strategic classification of a subdomain or bounded context and to derive the appropriate action strategy based on this classification.</p>"},{"location":"docs/scg/scg-gameplay-en/#the-mission","title":"The Mission","text":"<p>Determine the strategic classification and action strategy using the evaluation and action strategy schema. The game ends once this has been done for all subdomains or bounded contexts of a business domain.</p>"},{"location":"docs/scg/scg-gameplay-en/#game-preparation","title":"Game Preparation","text":"<p>The prerequisite for playing the Strategic Classification Game is the familiarity with the bounded contexts. Each bounded context is described using the Bounded Context Canvas. The completed Bounded Context Canvases are used as the playing field, either physically or digitally. If subdomains are known, it is recommended to group bounded contexts of the same subdomain on the playing field.</p>"},{"location":"docs/scg/scg-gameplay-en/#game-progress","title":"Game Progress","text":"<ol> <li>Evaluate Subdomain (Bounded Contexts) (60 minutes)</li> </ol> <p>The game begins with the selection of the first evaluation object (subdomain or bounded context). This corresponds to the selection of the first mission. For this evaluation object, the presented evaluation schema is filled out.</p> <p></p> <p>In the first 15 minutes, players have the opportunity to think independently or to exchange ideas bilaterally with other players. The cards of the Strategic Classification Game provide assistance and explain the evaluation criteria and their classification.</p> <p>After this introductory phase, the group discussion begins, during which any player can share their evaluation for the first evaluation criterion. The card that explains the evaluation is placed on the playing field. Other players join the discussion and also place their cards on the playing field. The team discussion leads to a decision regarding the classification as low, medium, or high.</p> <p>This process is repeated for each evaluation criterion.</p> <ol> <li>Decide on Strategic Classification (15 to 30 minutes)</li> </ol> <p>Based on the evaluation of the individual criteria, the next step is to derive the strategic classification using the evaluation schema and to document it in the Core Domain Chart.</p> <p></p> <ol> <li>Determine Action Strategy (15 to 30 minutes)</li> </ol> <p>In the next step, the players analyze the action strategy that corresponds to the strategic classification. This consists of implementation options and responsibility patterns. Here, too, players should have the opportunity to analyze this independently or to seek exchange with other players.</p> <p>After this introductory phase of 10 to 15 minutes, any player again places their card for the implementation option and the responsibility pattern on the playing field and explains their perspective. Other players follow, and the group discussion ensues. Finally, a clear decision must be made within the group. This is documented by marking it in the action strategy schema.</p> <p></p> <p>Visual Game Progress</p> <p></p>"},{"location":"docs/tag/architecture-patterns-de/","title":"Architecture patterns de","text":""},{"location":"docs/tag/architecture-patterns-de/#pitfalls","title":"Pitfalls","text":"<ul> <li>You can apply dependency inversion principle against outgoing components, e.g. repository or service client, but when you not separate between domain model and data transfer objects, then your domain core is not  technology-agnostic</li> </ul>"},{"location":"docs/tag/architecture-patterns-en/","title":"Architecture patterns en","text":""},{"location":"docs/tag/architecture-patterns-en/#pitfalls","title":"Pitfalls","text":"<ul> <li>You can apply dependency inversion principle against outgoing components, e.g. repository or service client, but when you not separate between domain model and data transfer objects, then your domain core is not  technology-agnostic</li> </ul>"},{"location":"docs/tag/tag-gameplay-de/","title":"Das Tactical Architecture Game","text":""},{"location":"docs/tag/tag-gameplay-de/#ziel-des-spiels","title":"Ziel des Spiels","text":"<p>Das Tactical Architecture Game hat das Ziel, grundlegende Architekturentscheidungen zu diskutieren und eine Teamentscheidung im Konsent f\u00fcr jede relevante Fragestellung zu finden. Hierf\u00fcr stellt das Spiel ein Set an Entscheidungen (Enabler Architecture Decisions), eingeteilt in Entscheidungskategorien, bereit.</p> <p>Das Tactical Architecture Game kann mit dem Wirkungsbereich bezogen auf einen Bounded Context, ein Entwicklungsteam oder auch eine Gruppe von Entwicklungsteams, die \u00fcber einen Systemverbund eine gleichartige taktische Architektur erreichen m\u00f6chten, angewendet werden. Das Spiel adressiert taktisches Domain-Driven Design und dom\u00e4nenzentrierte Architekturmuster, wie z.B. die Clean Architecture, Hexagonal Architecture oder Onion Architecture.</p>"},{"location":"docs/tag/tag-gameplay-de/#die-mission","title":"Die Mission","text":"<p>Jede Entscheidungskategorie stellt eine zu erf\u00fcllende Mission des Teams dar, die durch das Finden einer oder mehrerer Architekturentscheidungen abgeschlossen wird. Sind alle Missionen erf\u00fcllt, ist das Spiel zu Ende.</p>"},{"location":"docs/tag/tag-gameplay-de/#spielvorbereitung","title":"Spielvorbereitung","text":"<p>Zur Spielvorbereitung geh\u00f6rt die Vorbereitung des Spielfelds in physischer oder digitaler Form. Der Wirkungsbereich ist im Vorfeld zu kl\u00e4ren und auf dem Spielfeld zu dokumentieren.</p> <p>Das Spielfeld enth\u00e4lt Entscheidungskategorien und die Fragestellungen f\u00fcr eine zu treffende Entscheidung. Die Spielkarten beschreiben zum einen die Fragestellung sowie passende Muster und L\u00f6sungsstrategien.</p>"},{"location":"docs/tag/tag-gameplay-de/#spielverlauf","title":"Spielverlauf","text":"<p>Das Spiel f\u00fchrt die Spieler:innen entlang der Entscheidungskategorien, von innerem Ring / Hexagon / Onion zum \u00e4u\u00dferen. F\u00fcr jede Entscheidung startet ein Entscheidungsfindungsprozess zwischen den Spieler:innen. Wechselwirkungen zwischen Entscheidungen sind auf dem Spielfeld angegeben und m\u00fcssen bei der Entscheidungsfindung ebenfalls ber\u00fccksichtigt werden.</p> <p>Die Entscheidungskategorien werden in der folgenden Reihenfolge durchlaufen:</p> <p> Dom\u00e4nenkern</p> <p> Anwendungsf\u00e4lle</p> <p> Mappings</p> <p> Modularisierung</p> <p>Bestandteile des Entscheidungsfindungsprozesses einer taktischen Architekturentscheidung sind:</p> <ul> <li>Austausch \u00fcber Fragestellung und L\u00f6sungsstrategie f\u00fcr das gemeinsame Verst\u00e4ndnis</li> <li>Austausch \u00fcber Fragestellung und L\u00f6sungsstrategie im spezifischen Projektkontext anhand bekannter Anwendungsf\u00e4lle und Qualit\u00e4tsanforderungen</li> <li>Formulierung von Entscheidungsalternativen</li> <li>Finden einer Konsententscheidung im Team</li> </ul> <p>Jede Entscheidung muss innerhalb einer Timebox von 30 Minuten gefunden werden. Ist dies nicht m\u00f6glich, muss die Mission zu einem sp\u00e4teren Zeitpunkt wiederholt werden. Von dieser Timebox sind mindestens 10 Minuten f\u00fcr die Formulierung von Entscheidungsalternativen und f\u00fcr das Treffen der Entscheidung zu verwenden. Bei gro\u00dfen Teams kann die Timebox erh\u00f6ht werden, sollte jedoch als Richtwert 45 Minuten nicht \u00fcberschreiten.</p> <p>Spielfeld</p> <p></p>"},{"location":"docs/tag/tag-gameplay-en/","title":"The Tactical Architecture Game","text":""},{"location":"docs/tag/tag-gameplay-en/#objective-of-the-game","title":"Objective of the Game","text":"<p>The Tactical Architecture Game aims to discuss fundamental architectural decisions and to reach a team consensus for each relevant question. For this purpose, the game provides a set of decisions (Enabler Architecture Decisions) divided into decision categories.</p> <p>The Tactical Architecture Game can be applied to the scope of a bounded context, a development team, or a group of development teams aiming to achieve a consistent tactical architecture across a system network. The game addresses tactical domain-driven design and domain-centric architectural patterns such as Clean Architecture, Hexagonal Architecture, or Onion Architecture.</p>"},{"location":"docs/tag/tag-gameplay-en/#the-mission","title":"The Mission","text":"<p>Each decision category represents a mission to be accomplished by the team, which is completed by finding one or more architectural decisions. The game ends when all missions are accomplished.</p>"},{"location":"docs/tag/tag-gameplay-en/#game-preparation","title":"Game Preparation","text":"<p>Game preparation includes setting up the playing field in physical or digital form. The scope must be clarified and documented on the playing field beforehand.</p> <p>The playing field contains decision categories and questions for the decisions to be made. The game cards describe both the question and suitable patterns and solution strategies.</p>"},{"location":"docs/tag/tag-gameplay-en/#game-progress","title":"Game Progress","text":"<p>The game guides the players through the decision categories, from the inner Ring / Hexagon / Onion to the outer one. A decision-making process starts between the players for each decision. Interactions between decisions are indicated on the playing field and must also be considered during the decision-making process.</p> <p>The decision categories are processed in the following order:</p> <p> Domain Core</p> <p> Use Cases</p> <p> Mappings</p> <p> Modularization</p> <p>The components of the decision-making process for a tactical architecture decision include:</p> <ul> <li>Discussing the question and solution strategy for mutual understanding</li> <li>Discussing the question and solution strategy in the specific project context based on known use cases and quality requirements</li> <li>Formulating decision alternatives</li> <li>Reaching a team consensus</li> </ul> <p>Each decision must be made within a timebox of 30 minutes. If this is not possible, the mission must be repeated at a later time. At least 10 minutes of this timebox must be used for formulating decision alternatives and making the decision. For large teams, the timebox can be extended but should not exceed 45 minutes as a guideline.</p> <p>Playing Field</p> <p></p>"},{"location":"docs/tag/tag-overview-de/","title":"Architecture Enabling mittels kollaborativen Architekturentscheidungen","text":""},{"location":"docs/tag/tag-overview-de/#kurzbeschreibung-tactical-architecture-game","title":"Kurzbeschreibung Tactical Architecture Game","text":"<p>Das Tactical Architecture Game ist ein Gamification-Ansatz, um den taktischen Konstruktionsplan f\u00fcr die Softwarearchitektur kollaborativ im Team zu finden.</p> <p>Das Spiel basiert auf einem Set von Architekturentscheidungen, die in Summe den Konstruktionsplan darstellen. Die Entscheidungen stellen richtungsweisende Leitplanken der taktischen Architektur dar, auf die ein Team committet sein sollte. Aufgrund diesen Bedeutung, werden die Entscheidungen als Enabler Architecture Decisions bezeichnet.</p> <p>Das Tactical Architecture Game, wie hier beschrieben, ist f\u00fcr das taktische Domain-Driven Design in Kombination mit dom\u00e4nen-zentrischen Architekturmustern Clean, Hexagonal sowie Onion Architecture konzipiert. Durch diese Grundsatzentscheidungen ergeben sich bereits weiche Vorgaben (Soft Standards) f\u00fcr die Architektur. Die Enabler Architecture Decisions beschreibt einekonkret zur Anwendung kommende L\u00f6sungsstrategie f\u00fcr die Soft Standards dar.</p> <p>Die Enabler Architecture Decisions erstrecken sich \u00fcber vier Entscheidungskategorien:</p> <p> Modularisierung</p> <p> Dom\u00e4nenkern</p> <p> Anwendungsf\u00e4lle</p> <p> Mappings</p> <p>Jede Kategorie enth\u00e4lt in der Regel mehrere Entscheidungen.</p>"},{"location":"docs/tag/tag-overview-de/#enabler-architecture-decisions","title":"Enabler Architecture Decisions","text":""},{"location":"docs/tag/tag-overview-de/#entscheidungskategorie-domanenkern","title":"Entscheidungskategorie Dom\u00e4nenkern","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#einordnung-in-die-domanenzentrischen-architekturmuster","title":"Einordnung in die dom\u00e4nenzentrischen Architekturmuster","text":"Architekturmuster Betroffene Verantwortungsbereich Two-Way Mapping Clean Architecture <code>Entities Ring</code> Hexagonal Architecture <code>Domain Hexagon</code> Onion Architecture <code>Domain Service Onion</code> <code>Domain Onion</code>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-1-nach-welchem-prinzip-wird-das-domanenmodell-implementiert","title":"Architekturentscheidung #1: Nach welchem Prinzip wird das Dom\u00e4nenmodell implementiert?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung","title":"Vorbedingung","text":"<p>Keine</p>"},{"location":"docs/tag/tag-overview-de/#soft-standard","title":"Soft Standard","text":"<p>Mit der Entscheidung f\u00fcr Domain-Driven Design wird das Ziel verfolgt, ein Dom\u00e4nenmodell herauszuarbeiten und Mittels der Muster des taktischen Design zu implementieren.</p> <p>F\u00fcr die Implementierung eines Dom\u00e4nenmodell muss die Grundsatzentscheidung Rich Domain Model versus Anemic Domain Model getroffen werden. Diese Entscheidung legt fest, wie das Dom\u00e4nenmodell implementiert wird und an welchen Stellen Gesch\u00e4ftslogik und -regeln verortet werden.</p> <p>Das Rich Domain Model besagt, dass die Fachlogik im Dom\u00e4nenobjekt (Aggregate, Entity, Value Object) implementiert wird. Dadurch wird eine ausdrucksstarke Benennung der Methoden erm\u00f6glicht, die auf der Fachlichkeit basiert, im Vergleich zu einfachen set- und get-Methoden. Zudem erlaubt es die fachliche Validierung zur Sicherung der Konsistenz einer (Root) Entity ebenfalls direkt am Objekt zu implementieren. Gleiches gilt f\u00fcr Value Objects, die die Validierung des fachlichen Werts implementieren.</p> <p>Ein Anemic Domain Model enth\u00e4lt nur die Eigenschaften sowie dazugeh\u00f6rige getter und setter. Fachlogik und Validierung werden ausschlie\u00dflich in Domain Services implementiert. Das Anemic Domain Model gilt als Anti-Pattern, da dies oft zu einem Verlust der Fachsprache sowie zu Konsistenzverletzungen f\u00fchrt. Dennoch muss ein Team diese Entscheidung bewusst treffen.</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien","title":"L\u00f6sungsstrategien","text":"<p> Rich Domain Model</p> <p> Moderately Rich Domain Model</p> <p> Anemic Domain Model</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-2-wie-soll-das-value-object-muster-in-der-implementierung-angewendet-werden","title":"Architekturentscheidung #2: Wie soll das Value Object Muster in der Implementierung angewendet werden?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_1","title":"Vorbedingung","text":"Enabling Architecture Decision Entscheidung 5 <code>Rich Domain Model</code> <code>Moderately Rich Domain Model</code>"},{"location":"docs/tag/tag-overview-de/#soft-standard_1","title":"Soft Standard","text":"<p>Wird dem Rich Domain Model gefolgt, entsteht in Teams regelm\u00e4\u00dfig die Frage, ob jeder Fachwert als Value Object implementiert werden muss. In komplexen Aggregates k\u00f6nnen potenziell zahlreiche Value Objects entstehen.</p> <p>Die Empfehlung ist fachliche Werte immer als Value Objects zu implementieren, um die Fachlichkeit zu st\u00e4rken und die Robustheit zu erh\u00f6hen.</p> <p>Ausnahmen k\u00f6nnen gemacht werden, wenn fachliche Werte nicht validiert werden m\u00fcssen oder wenn fachliche Werte Elemente eines verschachtelten Value Objects darstellen.</p> <p>Auf Value Objects zu verzichten und ausschlie\u00dflich primitive Datentypen f\u00fcr fachliche Werte zu verwenden, ist ebenfalls eine M\u00f6glichkeit, wird jedoch als Anti-Pattern bewertet. Insbesondere bei komplexen Aggregates mit viel Validierungslogik, entsteht \u00fcber die Zeit schwer lesbarer Code.</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_1","title":"L\u00f6sungsstrategien","text":"<p> Jeder fachliche Wert wird als Value Object implementiert</p> <p> Nur fachliche Werte, die Verhalten und/oder Validierung bedingen, werden als Value Object implementiert</p> <p> Jeder fachliche Wert wird mittels primitiven Datentyp implementiert</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_1","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-3-wie-soll-das-value-object-muster-implementiert-werden","title":"Architekturentscheidung #3: Wie soll das Value Object Muster implementiert werden?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_2","title":"Vorbedingung","text":"Enabling Architecture Decision Entscheidung 5 <code>Rich Domain Model</code> <code>Moderately Rich Domain Model</code> 6 <code>Implementierung von Fachwerte als eigenes Object (Value Object Muster)</code>"},{"location":"docs/tag/tag-overview-de/#soft-standard_2","title":"Soft Standard","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_2","title":"L\u00f6sungsstrategien","text":"<p> Jeder fachliche Wert wird als Value Object implementiert</p> <p> Nur fachliche Werte, die Verhalten und/oder Validierung bedingen, werden als Value Object implementiert</p> <p> Jeder fachliche Wert wird mittels primitiven Datentyp implementiert</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_2","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-4-wie-wird-die-fachliche-konsistenz-bei-verwendung-des-anemic-domain-model-gesichert","title":"Architekturentscheidung #4: Wie wird die fachliche Konsistenz bei Verwendung des Anemic Domain Model gesichert?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_3","title":"Vorbedingung","text":"Enabling Architecture Decision Entscheidung 5 <code>Anemic Domain Model</code>"},{"location":"docs/tag/tag-overview-de/#soft-standard_3","title":"Soft Standard","text":"<p>Wird das Anemic Domain Model angewendet, muss f\u00fcr die Validierungslogik ein anderes Element als die Fachobjekte selbst gefunden werden. Eine M\u00f6glichkeit hierf\u00fcr ist der Domain Service, jedoch w\u00fcrde dies dazu f\u00fchren, dass die Verantwortung f\u00fcr Fachlogik und fachliche Validierung in einem Muster verortet wird. Bei erh\u00f6hter fachlicher Komplexit\u00e4t, empfiehlt sich daher die Einf\u00fchrung eines neuen Elements in der Mustersprache, wie z.B. ein Validator.</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_3","title":"L\u00f6sungsstrategien","text":"<p> Validierungslogik im Domain Services</p> <p> Eigenes Element in der Mustersprache, zugeh\u00f6rig zum Dom\u00e4nenkern</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_3","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-5-wie-wird-validierung-implementiert","title":"Architekturentscheidung #5: Wie wird Validierung implementiert?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_4","title":"Vorbedingung","text":"<p>Keine</p>"},{"location":"docs/tag/tag-overview-de/#soft-standard_4","title":"Soft Standard","text":"<p>Unabh\u00e4ngig davon, an welcher Stelle die Validierung in der Mustersprache verortet ist, ben\u00f6tigt das Entwicklungsteam eine gemeinsame Vorstellung davon, wie die Validierung implementiert werden soll. Die M\u00f6glichkeiten reichen von der nativen Implementierung in der verwendeten Programmiersprache \u00fcber selbst erstellte Abstraktionen bis hin zum Einsatz von Drittanbieter-Bibliotheken.</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_4","title":"L\u00f6sungsstrategien","text":"<p> Native Implementierung ohne Abstraktion</p> <p> Native Implementierung mit Abstraktion</p> <p> Drittanbieter-Bibliotheken</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_4","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-6-welche-strategie-der-objekterzeugung-wird-fur-komplexe-fachobjekte-verwendet","title":"Architekturentscheidung #6: Welche Strategie der Objekterzeugung, wird f\u00fcr komplexe Fachobjekte verwendet?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_5","title":"Vorbedingung","text":"<p>Keine</p>"},{"location":"docs/tag/tag-overview-de/#soft-standard_5","title":"Soft Standard","text":"<p>Eine Root-Entity, eine Entity oder ein Value Object muss stets einen g\u00fcltigen fachlichen Zustand sicherstellen. Die Erzeugung der Fachobjekte spielt dabei eine entscheidende Rolle. Die Mustersprache des taktischen Designs beschreibt die Factory, die die Verantwortung f\u00fcr die Objekterzeugung \u00fcbernimmt, wenn dies nicht mehr durch einen einfachen Konstruktor am Objekt selbst m\u00f6glich ist.</p> <p>Als Alternative zur Factory kann das Builder-Pattern verwendet werden und Static Factory Methoden sind eine gute Alternative oder Erg\u00e4nzung zu Konstruktoren.</p> <p>In der Regel gibt es nicht den einen Erzeugungsprozess f\u00fcr eine (Root) Entity. Folglich ist die Kombination der L\u00f6sungsstrategien f\u00fcr jeweilige passende Einsatzszenarien ein erfolgsversprechender Weg. Eine willk\u00fcrliche und im schlimmsten Fall widerspr\u00fcchliche Verwendung der L\u00f6sungsstrategien, erh\u00f6ht die strukturelle Komplexit\u00e4t der Architektur. Daher wird ein aktiver Umgang mit dieser Fragestellung empfohlen.</p>"},{"location":"docs/tag/tag-overview-de/#gangige-szenarien-der-objekterzeugung-in-domanenzentrischen-architekturmuster","title":"G\u00e4ngige Szenarien der Objekterzeugung in dom\u00e4nenzentrischen Architekturmuster","text":"<ol> <li>Ein User f\u00fchrt Anwendungsf\u00e4lle aus, bei denen das Dom\u00e4nenobjekt erzeugt werden muss</li> <li>Der Zustand eines Dom\u00e4nenobjektes muss aus dem Speicher gelesen werden</li> <li>Der Zustand eines Dom\u00e4nenobjektes ergibt sich aus unterschiedlichen Quellen (z.B. Speicher und externer Service)</li> <li>Die Gesch\u00e4ftslogik bedingt die (Neu-)Erzeugung von Dom\u00e4nenobjekten als Bestandteil der Kontrollfluss der Dom\u00e4nenlogik</li> </ol>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_5","title":"L\u00f6sungsstrategien","text":"<p> Factory</p> <p> Static Method Factory</p> <p> Konstruktor</p> <p> Builder</p> <p> Deine Strategy (Joker)</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_5","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#entscheidungskategorie-anwendungsfalle","title":"Entscheidungskategorie Anwendungsf\u00e4lle","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#einordnung-in-die-domanenzentrischen-architekturmuster_1","title":"Einordnung in die dom\u00e4nenzentrischen Architekturmuster","text":"Architekturmuster Betroffene Verantwortungsbereich Two-Way Mapping Clean Architecture <code>Use Case Ring</code> Hexagonal Architecture <code>Application Hexagon</code> Onion Architecture <code>Application Onion</code>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-7-wie-werden-use-cases-geschnitten","title":"Architekturentscheidung #7: Wie werden Use Cases geschnitten?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_6","title":"Vorbedingung","text":"<p>Keine</p>"},{"location":"docs/tag/tag-overview-de/#soft-standard_6","title":"Soft Standard","text":"<p>Use Cases sind Schnittstellen der fachlichen Applikation und werden aus der Perspektive der Dom\u00e4ne definiert. Dabei k\u00f6nnen verschiedene Heuristiken zum Einsatz kommen, und keine Heuristik ist per se die beste. Entscheidend ist vielmehr ein gemeinsames Verst\u00e4ndnis und die einheitliche Anwendung, die jeweils von konkreten Szenarien abh\u00e4ngt.</p>"},{"location":"docs/tag/tag-overview-de/#gangige-szenarien-und-passende-losungsstrategie","title":"G\u00e4ngige Szenarien und passende L\u00f6sungsstrategie","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_6","title":"L\u00f6sungsstrategien","text":"<p> Use Case je Funktion</p> <p> Use Case f\u00fcr alle Command-Operationen</p> <p> Use Case f\u00fcr alle Query-Operationen</p> <p> Use Case f\u00fcr alle Schnittstellen bezogen auf eine (Root) Entity</p> <p> Use Case f\u00fcr alle Schnittstelle zu einer technischen Komponente (z.B. Datenbank) innerhalb einer fachlichen Modulgrenze</p> <p> Deine Strategy (Joker)</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_6","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#entscheidungskategorie-mappings","title":"Entscheidungskategorie Mappings","text":"<p>Entscheidungen \u00fcber Mapping-Strategien beeinflussen im Gesamtbild signifikant die st\u00e4rke der Kopplung der Architekturbausteine auf lange Sicht. Kurzfristig sind Mappings jedoch auch Overhead, weshalb eine gute Balance, passend zu unterschiedliche Szenarien, im Team gefunden werden muss.</p>"},{"location":"docs/tag/tag-overview-de/#einordnung-in-die-domanenzentrischen-architekturmuster_2","title":"Einordnung in die dom\u00e4nenzentrischen Architekturmuster","text":"Architekturmuster Betroffene Verantwortungsbereich Two-Way Mapping Betroffene Verantwortungsbereich Full Mapping Clean Architecture <code>Interface Adapters Ring</code> <code>Interface Adapters Ring</code><code>Use Case Ring</code> Hexagonal Architecture <code>Adapters Hexagon</code> <code>Adapters Hexagon</code><code>Application Hexagon</code> Onion Architecture <code>Adapters Onion</code> <code>Adapters Onion</code><code>Application Onion</code>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-8-welche-mapping-strategie-wird-als-default-strategie-verwendet-und-fur-welche-szenarien-eignen-sich-alternative-strategien","title":"Architekturentscheidung #8: Welche Mapping-Strategie wird als Default-Strategie verwendet und f\u00fcr welche Szenarien eignen sich alternative Strategien?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_7","title":"Vorbedingung","text":"<p>Keine</p>"},{"location":"docs/tag/tag-overview-de/#soft-standard_7","title":"Soft Standard","text":"<p>Diese Entscheidung wurde bereits bei der Beschreibung der Clean Architecture erl\u00e4utert.</p>"},{"location":"docs/tag/tag-overview-de/#gangige-szenarien-und-passende-losungsstrategie_1","title":"G\u00e4ngige Szenarien und passende L\u00f6sungsstrategie","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_7","title":"L\u00f6sungsstrategien","text":"<p> One-Mapping</p> <p> Two-Way Mapping</p> <p> Full Mapping</p> <p> No Mapping</p> <p> Deine Strategy (Joker)</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_7","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-9-wie-werden-mappings-implementiert","title":"Architekturentscheidung #9: Wie werden Mappings implementiert?","text":"Enabling Architecture Decision Entscheidung 12 <code>Two-Way Mapping Strategy</code> <code>Full Mapping Strategy</code>"},{"location":"docs/tag/tag-overview-de/#soft-standard_8","title":"Soft Standard","text":"<p>F\u00fcr die Two-Way und die Full Mapping Strategie stellt sich die Frage, wie Mappings implementiert werden sollen. Eine einheitliche L\u00f6sungsstrategie wird empfohlen, um die Komplexit\u00e4t in der Implementierung nicht unn\u00f6tig zu erh\u00f6hen. Jede Strategie hat Vor- und Nachteile, und letztendlich muss sie auch den Vorlieben des Teams entsprechen. Daher wird empfohlen diese Entscheidung bewusst im Team zu treffen.</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_8","title":"L\u00f6sungsstrategien","text":"<p> Native Implementierung durch ein eigenes Element in der Mustersprache (z.B. Mapper)</p> <p> Native Implementierung als Logik des Interface Adapters (z.B. private Methode)</p> <p> Implementierung durch ein eigenes Element in der Mustersprache sowie mit Verwendung von Drittanbieter-Bibliotheken</p> <p> Deine Strategy (Joker)</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_8","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#entscheidungskategorie-modularisierung","title":"Entscheidungskategorie Modularisierung","text":"<p>Enabler Architecture Decisions der Entscheidungskategorie Modularisierung haben \u00fcbergreifenden Charakter und gelten in allen dom\u00e4nenzentrischen Architekturmuster auf gleiche Weise.</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-10-vertikale-vs-horizontale-schichtung","title":"Architekturentscheidung #10: Vertikale vs. Horizontale Schichtung","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_8","title":"Vorbedingung","text":"<p>Keine</p>"},{"location":"docs/tag/tag-overview-de/#soft-standard_9","title":"Soft Standard","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_9","title":"L\u00f6sungsstrategien","text":"<p> Vertikale und fachlich motivierte Schichtung auf Architekturebene 1</p> <p> Technische Schichtung auf Architekturebene 1 mit fachlicher Schichtung auf Architekturebene 2 und Split Packages</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_9","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-11-wie-wird-modularisierung-umgesetzt","title":"Architekturentscheidung #11: Wie wird Modularisierung umgesetzt?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_9","title":"Vorbedingung","text":""},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-12-wie-werden-fachliche-module-strukturiert","title":"Architekturentscheidung #12: Wie werden fachliche Module strukturiert?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_10","title":"Vorbedingung","text":"Enabling Architecture Decision Entscheidung 1 <code>Vertikale Schichtung</code>"},{"location":"docs/tag/tag-overview-de/#soft-standard_10","title":"Soft Standard","text":"<p>Das fachliche Modul bildet sich um ein Aggregate. Innerhalb dieses Moduls werden die Verantwortungsbereiche (Ring, Hexagon bzw. Onion) des dom\u00e4nenzentrischen Architekturmuster abgebildet. Hierf\u00fcr gibt es verschiedene L\u00f6sungsstrategien.</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_10","title":"L\u00f6sungsstrategien","text":"<p> Architektonisch ausdrucksstark</p> <p> Architektonisch ausdrucksstark in der fachlichen Applikation</p> <p> Verantwortungsbereiche (Ring, Hexagon bzw. Onion) als Schichten</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_10","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-de/#architekturentscheidung-13-wie-wird-die-abhangigkeit-zwischen-zwei-aggregates-behandelt","title":"Architekturentscheidung #13: Wie wird die Abh\u00e4ngigkeit zwischen zwei Aggregates behandelt?","text":""},{"location":"docs/tag/tag-overview-de/#vorbedingung_11","title":"Vorbedingung","text":"<p>Keine</p>"},{"location":"docs/tag/tag-overview-de/#soft-standard_11","title":"Soft Standard","text":"<p>Im taktischen Domain-Driven Design wird eine Entkopplung auf Basis der Grenzen von Aggregates verfolgt. Aggregates haben einen unabh\u00e4ngigen Lebenszyklus.</p> <p>Falls ein fachlicher Zusammenhang hergestellt werden muss, darf ein Aggregate ein anderes Aggregate nur \u00fcber dessen Identit\u00e4t referenzieren. Die Referenz muss zur Laufzeit aufgel\u00f6st werden.</p> <p>Abh\u00e4ngigkeiten dieser Art sind musterartig und gleichartig zu behandeln, um die Komplexit\u00e4t gering und die Verst\u00e4ndlichkeit der Architektur hoch zu halten.</p> <p>Welches Muster als Standard dienen kann und in welchen Szenarien auf alternative L\u00f6sungsstrategien zur\u00fcckgegriffen wird, muss als kollaborative Architekturentscheidung im Team getroffen werden.</p>"},{"location":"docs/tag/tag-overview-de/#losungsstrategien_11","title":"L\u00f6sungsstrategien","text":"<p> Application Service Pattern</p> <p> Adapter Out Use Case In Pattern</p> <p> Event-driven / Publish-Subscribe Pattern</p>"},{"location":"docs/tag/tag-overview-de/#risiko-wenn-die-entscheidung-nicht-bewusst-getroffen-wird_11","title":"Risiko, wenn die Entscheidung nicht bewusst getroffen wird","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/","title":"Architecture Enabling through Collaborative Architecture Decisions","text":""},{"location":"docs/tag/tag-overview-en/#brief-description-of-the-tactical-architecture-game","title":"Brief Description of the Tactical Architecture Game","text":"<p>The Tactical Architecture Game is a gamification approach to collaboratively finding the tactical construction plan for software architecture within a team.</p> <p>The game is based on a set of architecture decisions that collectively represent the construction plan. These decisions provide guiding principles for the tactical architecture that a team should commit to. Due to their significance, these decisions are referred to as Enabler Architecture Decisions.</p> <p>The Tactical Architecture Game, as described here, is designed for tactical domain-driven design in combination with domain-centric architectural patterns such as Clean, Hexagonal, and Onion Architecture. These fundamental decisions already establish soft standards for the architecture. The Enabler Architecture Decisions describe a concrete solution strategy to be applied to these soft standards.</p> <p>The Enabler Architecture Decisions span four decision categories:</p> <p> Modularization</p> <p> Domain Core</p> <p> Use Cases</p> <p> Mappings</p> <p>Each category typically contains multiple decisions.</p>"},{"location":"docs/tag/tag-overview-en/#enabler-architecture-decisions","title":"Enabler Architecture Decisions","text":""},{"location":"docs/tag/tag-overview-en/#decision-category-domain-core","title":"Decision Category Domain Core","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#integration-into-domain-centric-architectural-patterns","title":"Integration into Domain-Centric Architectural Patterns","text":"Architectural Pattern Affected Responsibility Area Two-Way Mapping Clean Architecture <code>Entities Ring</code> Hexagonal Architecture <code>Domain Hexagon</code> Onion Architecture <code>Domain Service Onion</code> <code>Domain Onion</code>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-1-by-what-principle-should-the-domain-model-be-implemented","title":"Architecture Decision #1: By what principle should the domain model be implemented?","text":""},{"location":"docs/tag/tag-overview-en/#precondition","title":"Precondition","text":"<p>None</p>"},{"location":"docs/tag/tag-overview-en/#soft-standard","title":"Soft Standard","text":"<p>With the decision for domain-driven design, the goal is to develop a domain model and implement it using the patterns of tactical design.</p> <p>For implementing a domain model, the fundamental decision between Rich Domain Model and Anemic Domain Model must be made. This decision determines how the domain model will be implemented and where business logic and rules will be located.</p> <p>The Rich Domain Model dictates that business logic is implemented within the domain object (Aggregate, Entity, Value Object). This allows for expressive naming of methods based on business functionality, as opposed to simple set and get methods. It also permits the business validation to ensure the consistency of a (Root) Entity to be implemented directly on the object. The same applies to Value Objects that implement validation of the business value.</p> <p>An Anemic Domain Model contains only the properties along with the associated getters and setters. Business logic and validation are exclusively implemented in Domain Services. The Anemic Domain Model is considered an anti-pattern, as it often leads to loss of business language and consistency violations. Nevertheless, a team must consciously make this decision.</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies","title":"Solution Strategies","text":"<p> Rich Domain Model</p> <p> Moderately Rich Domain Model</p> <p> Anemic Domain Model</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-2-how-should-the-value-object-pattern-be-applied-in-implementation","title":"Architecture Decision #2: How should the Value Object pattern be applied in implementation?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_1","title":"Precondition","text":"Enabling Architecture Decision Decision 5 <code>Rich Domain Model</code> <code>Moderately Rich Domain Model</code>"},{"location":"docs/tag/tag-overview-en/#soft-standard_1","title":"Soft Standard","text":"<p>Following the Rich Domain Model often raises the question within teams of whether every business value should be implemented as a Value Object. Complex aggregates can potentially lead to numerous Value Objects.</p> <p>The recommendation is to always implement business values as Value Objects to enhance business functionality and robustness.</p> <p>Exceptions can be made if business values do not need to be validated or if business values are elements of a nested Value Object.</p> <p>Avoiding Value Objects and using only primitive data types for business values is also an option but is considered an anti-pattern. Especially in complex aggregates with a lot of validation logic, this can lead to hard-to-read code over time.</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_1","title":"Solution Strategies","text":"<p> Every business value is implemented as a Value Object</p> <p> Only business values that require behavior and/or validation are implemented as Value Objects</p> <p> Every business value is implemented using primitive data types</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_1","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-3-how-should-the-value-object-pattern-be-implemented","title":"Architecture Decision #3: How should the Value Object pattern be implemented?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_2","title":"Precondition","text":"Enabling Architecture Decision Decision 5 <code>Rich Domain Model</code> <code>Moderately Rich Domain Model</code> 6 <code>Implementation of Business Values as a separate Object (Value Object pattern)</code>"},{"location":"docs/tag/tag-overview-en/#soft-standard_2","title":"Soft Standard","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_2","title":"Solution Strategies","text":"<p> Every business value is implemented as a Value Object</p> <p> Only business values that require behavior and/or validation are implemented as Value Objects</p> <p> Every business value is implemented using primitive data types</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_2","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-4-how-is-business-consistency-ensured-when-using-the-anemic-domain-model","title":"Architecture Decision #4: How is business consistency ensured when using the Anemic Domain Model?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_3","title":"Precondition","text":"Enabling Architecture Decision Decision 5 <code>Anemic Domain Model</code>"},{"location":"docs/tag/tag-overview-en/#soft-standard_3","title":"Soft Standard","text":"<p>When using the Anemic Domain Model, another element must be found for validation logic instead of the business objects themselves. One option is the Domain Service; however, this would place the responsibility for business logic and validation in one pattern. For increased business complexity, it is advisable to introduce a new element in the pattern language, such as a Validator.</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_3","title":"Solution Strategies","text":"<p> Validation logic in Domain Services</p> <p> Separate element in the pattern language, associated with the domain core</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_3","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-5-how-is-validation-implemented","title":"Architecture Decision #5: How is validation implemented?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_4","title":"Precondition","text":"<p>None</p>"},{"location":"docs/tag/tag-overview-en/#soft-standard_4","title":"Soft Standard","text":"<p>Regardless of where validation is located in the pattern language, the development team needs a shared understanding of how validation should be implemented. Options range from native implementation in the used programming language to self-created abstractions to using third-party libraries.</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_4","title":"Solution Strategies","text":"<p> Native implementation without abstraction</p> <p> Native implementation with abstraction</p> <p> Third-party libraries</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_4","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-6-what-object-creation-strategy-should-be-used-for-complex-business-objects","title":"Architecture Decision #6: What object creation strategy should be used for complex business objects?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_5","title":"Precondition","text":"<p>None</p>"},{"location":"docs/tag/tag-overview-en/#soft-standard_5","title":"Soft Standard","text":"<p>A Root Entity, Entity, or Value Object must always ensure a valid business state. The creation of business objects plays a crucial role in this. The tactical design pattern language describes the Factory, which takes responsibility for object creation when it is no longer possible through a simple constructor on the object itself.</p> <p>As an alternative to the Factory, the Builder pattern can be used, and Static Factory Methods are a good alternative or complement to constructors.</p> <p>Typically, there is no single creation process for a (Root) Entity. Therefore, a combination of solution strategies for each suitable scenario is a promising approach. Arbitrary and, in the worst case, contradictory use of solution strategies increases the structural complexity of the architecture. Thus, an active approach to this question is recommended.</p>"},{"location":"docs/tag/tag-overview-en/#common-scenarios-of-object-creation-in-domain-centric-architectural-patterns","title":"Common scenarios of object creation in domain-centric architectural patterns","text":"<ol> <li>A user executes use cases where the domain object needs to be created</li> <li>The state of a domain object needs to be read from storage</li> <li>The state of a domain object results from different sources (e.g., storage and external service)</li> <li>Business logic necessitates the (re)creation of domain objects as part of the domain logic control flow</li> </ol>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_5","title":"Solution Strategies","text":"<p> Factory</p> <p> Static Method Factory</p> <p> Constructor</p> <p> Builder</p> <p> Your Strategy (Wildcard)</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_5","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#decision-category-use-cases","title":"Decision Category Use Cases","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#integration-into-domain-centric-architectural-patterns_1","title":"Integration into Domain-Centric Architectural Patterns","text":"Architectural Pattern Affected Responsibility Area Two-Way Mapping Clean Architecture <code>Use Case Ring</code> Hexagonal Architecture <code>Application Hexagon</code> Onion Architecture <code>Application Onion</code>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-7-how-are-use-cases-segmented","title":"Architecture Decision #7: How are use cases segmented?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_6","title":"Precondition","text":"<p>None</p>"},{"location":"docs/tag/tag-overview-en/#soft-standard_6","title":"Soft Standard","text":"<p>Use cases are the interfaces of the business application and are defined from the domain's perspective. Various heuristics can be used, and no heuristic is inherently the best. What is crucial is a shared understanding and consistent application, which depends on specific scenarios.</p>"},{"location":"docs/tag/tag-overview-en/#common-scenarios-and-suitable-solution-strategies","title":"Common scenarios and suitable solution strategies","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_6","title":"Solution Strategies","text":"<p> Use case per function</p> <p> Use case for all command operations</p> <p> Use case for all query operations</p> <p> Use case for all interfaces related to a (Root) Entity</p> <p> Use case for all interfaces to a technical component (e.g., database) within a business module boundary</p> <p> Your Strategy (Wildcard)</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_6","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#decision-category-mappings","title":"Decision Category Mappings","text":"<p>Decisions about mapping strategies significantly influence the long-term strength of the coupling of architectural components. However, mappings can also be overhead in the short term, so a good balance suitable for different scenarios must be found within the team.</p>"},{"location":"docs/tag/tag-overview-en/#integration-into-domain-centric-architectural-patterns_2","title":"Integration into Domain-Centric Architectural Patterns","text":"Architectural Pattern Affected Responsibility Area Two-Way Mapping Affected Responsibility Area Full Mapping Clean Architecture <code>Interface Adapters Ring</code> <code>Interface Adapters Ring</code><code>Use Case Ring</code> Hexagonal Architecture <code>Adapters Hexagon</code> <code>Adapters Hexagon</code><code>Application Hexagon</code> Onion Architecture <p><code>Adapters Onion</code>                             | <code>Adapters Onion</code><code>Application Onion</code>      |</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-8-what-mapping-strategy-is-used-as-the-default-strategy-and-which-scenarios-suit-alternative-strategies","title":"Architecture Decision #8: What mapping strategy is used as the default strategy, and which scenarios suit alternative strategies?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_7","title":"Precondition","text":"<p>None</p>"},{"location":"docs/tag/tag-overview-en/#soft-standard_7","title":"Soft Standard","text":"<p>This decision has already been explained in the description of Clean Architecture.</p>"},{"location":"docs/tag/tag-overview-en/#common-scenarios-and-suitable-solution-strategies_1","title":"Common scenarios and suitable solution strategies","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_7","title":"Solution Strategies","text":"<p> One-Mapping</p> <p> Two-Way Mapping</p> <p> Full Mapping</p> <p> No Mapping</p> <p> Your Strategy (Wildcard)</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_7","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-9-how-are-mappings-implemented","title":"Architecture Decision #9: How are mappings implemented?","text":"Enabling Architecture Decision Decision 12 <code>Two-Way Mapping Strategy</code> <code>Full Mapping Strategy</code>"},{"location":"docs/tag/tag-overview-en/#soft-standard_8","title":"Soft Standard","text":"<p>For the Two-Way and Full Mapping strategies, the question of how mappings should be implemented arises. A unified solution strategy is recommended to avoid unnecessary complexity in implementation. Each strategy has its pros and cons, and ultimately it must also suit the team's preferences. Therefore, this decision should be consciously made within the team.</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_8","title":"Solution Strategies","text":"<p> Native implementation through a separate element in the pattern language (e.g., Mapper)</p> <p> Native implementation as logic of the Interface Adapter (e.g., private method)</p> <p> Implementation through a separate element in the pattern language as well as using third-party libraries</p> <p> Your Strategy (Wildcard)</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_8","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#decision-category-modularization","title":"Decision Category Modularization","text":"<p>Enabler Architecture Decisions in the category of modularization have a cross-cutting character and apply uniformly across all domain-centric architectural patterns.</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-10-vertical-vs-horizontal-layering","title":"Architecture Decision #10: Vertical vs. Horizontal Layering","text":""},{"location":"docs/tag/tag-overview-en/#precondition_8","title":"Precondition","text":"<p>None</p>"},{"location":"docs/tag/tag-overview-en/#soft-standard_9","title":"Soft Standard","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_9","title":"Solution Strategies","text":"<p> Vertical and business-motivated layering at architecture level 1</p> <p> Technical layering at architecture level 1 with business layering at architecture level 2 and split packages</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_9","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-11-how-is-modularization-implemented","title":"Architecture Decision #11: How is modularization implemented?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_9","title":"Precondition","text":""},{"location":"docs/tag/tag-overview-en/#architecture-decision-12-how-are-business-modules-structured","title":"Architecture Decision #12: How are business modules structured?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_10","title":"Precondition","text":"Enabling Architecture Decision Decision 1 <code>Vertical Layering</code>"},{"location":"docs/tag/tag-overview-en/#soft-standard_10","title":"Soft Standard","text":"<p>The business module forms around an aggregate. Within this module, the responsibility areas (Ring, Hexagon, or Onion) of the domain-centric architectural pattern are represented. Various solution strategies are available for this.</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_10","title":"Solution Strategies","text":"<p> Architecturally expressive</p> <p> Architecturally expressive in the business application</p> <p> Responsibility areas (Ring, Hexagon, or Onion) as layers</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_10","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"},{"location":"docs/tag/tag-overview-en/#architecture-decision-13-how-is-the-dependency-between-two-aggregates-handled","title":"Architecture Decision #13: How is the dependency between two aggregates handled?","text":""},{"location":"docs/tag/tag-overview-en/#precondition_11","title":"Precondition","text":"<p>None</p>"},{"location":"docs/tag/tag-overview-en/#soft-standard_11","title":"Soft Standard","text":"<p>In tactical domain-driven design, decoupling based on aggregate boundaries is pursued. Aggregates have an independent lifecycle.</p> <p>If a business connection needs to be established, one aggregate may reference another aggregate only through its identity. The reference must be resolved at runtime.</p> <p>Such dependencies should be treated uniformly and in a pattern-like manner to keep complexity low and the architecture easily understandable.</p> <p>Which pattern serves as the standard and in which scenarios alternative solution strategies are used must be collaboratively decided by the team.</p>"},{"location":"docs/tag/tag-overview-en/#solution-strategies_11","title":"Solution Strategies","text":"<p> Application Service Pattern</p> <p> Adapter Out Use Case In Pattern</p> <p> Event-driven / Publish-Subscribe Pattern</p>"},{"location":"docs/tag/tag-overview-en/#risk-if-the-decision-is-not-consciously-made_11","title":"Risk if the decision is not consciously made","text":"<p>@ToDo</p>"}]}